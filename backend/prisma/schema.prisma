generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
   url      = env("DATABASE_URL")
}
model epafes {
  id_epafis          Int                  @id @default(autoincrement())
  onoma              String?
  epitheto           String?
  email              String?
  tilefono           BigInt?
  idiotita           String?
  daneizetai         daneizetai[]
  ekpaideutis        ekpaideutis?
  melos              melos?
  eksoflei           eksoflei[]
  kratisi_katafigiou kratisi_katafigiou[]

  @@map("Epafes")
}

model melos {
  id_melous            Int               @id @map("id_epafis")
  tipo_melous          String
  epafes               epafes            @relation(fields: [id_melous], references: [id_epafis], onDelete: Cascade)
  eksoteriko_melos     eksoteriko_melos?
  esoteriko_melos      esoteriko_melos?
  simmetoxi            simmetoxi[]
  plironei             plironei[]
  parakolouthisi       parakolouthisi[]
  katavalei            katavalei[]

  // Νέα σχέση με βαθμό δυσκολίας
  id_vathmou_diskolias Int
  vathmos_diskolias    vathmos_diskolias @relation(fields: [id_vathmou_diskolias], references: [id_vathmou_diskolias], onDelete: Cascade)

  @@map("Melos")
}

model esoteriko_melos {
  id_es_melous        Int              @id @map("id_melous")
  hmerominia_gennhshs DateTime?
  patronimo           String?
  odos                String?
  tk                  Int?
  arithmos_mitroou    Int              @unique
  melos               melos            @relation(fields: [id_es_melous], references: [id_melous], onDelete: Cascade)
  athlitis            athlitis?
  sindromitis         sindromitis?
  
  // Αλλαγή της σχέσης
  ypefthinos_se      ypefthynoi_eksormisis[]

  @@map("EsoterikoMelos")
}

model eksoteriko_melos {
  id_ekso_melous   Int     @id @map("id_melous") // Το id_ekso_melous είναι το ίδιο με το id_melous
  onoma_sillogou   String?
  arithmos_mitroou Int     @unique
  melos            melos   @relation(fields: [id_ekso_melous], references: [id_melous], onDelete: Cascade)

  @@map("EksoterikoMelos")
}
model athlitis {
  id_athliti                  Int             @id @map("id_es_melous") // Το id_athliti είναι το ίδιο με το id_es_melous
  arithmos_deltiou            Int?
  hmerominia_enarksis_deltiou DateTime?
  hmerominia_liksis_deltiou   DateTime?
  esoteriko_melos             esoteriko_melos @relation(fields: [id_athliti], references: [id_es_melous], onDelete: Cascade)
  asxoleitai                  asxoleitai[]    // Αντίστροφη σχέση με το asxoleitai
  agonizetai                  agonizetai[]    // Αντίστροφη σχέση με το agonizetai

  @@map("Athlitis")
}
model sindromitis {
  id_sindromiti       Int             @id @map("id_es_melous") // Το id_sindromiti είναι το ίδιο με το id_es_melous
  katastasi_sindromis String?
  esoteriko_melos     esoteriko_melos @relation(fields: [id_sindromiti], references: [id_es_melous], onDelete: Cascade)
  exei                exei[]          // Αντίστροφη σχέση με το exei

  @@map("Sindromitis")
}
model ekpaideutis {
  id_ekpaideuti   Int             @id @map("id_epafis") // Το id_ekpaideuti είναι το ίδιο με το id_epafis
  epipedo         String?
  klados          String?
  epafes          epafes          @relation(fields: [id_ekpaideuti], references: [id_epafis], onDelete: Cascade)
  ekpaideuei      ekpaideuei[]    // Αντίστροφη σχέση με το ekpaideuei

  @@map("Ekpaideutis")
}

model vathmos_diskolias {
  id_vathmou_diskolias Int     @id @default(autoincrement())
  epipedo              Int?

  drastiriotita        drastiriotita[]
  melh                 melos[]          // Αντίστροφη σχέση

  @@map("VathmosDiskolias")
}

model eksormisi {
  id_eksormisis         Int       @id @default(autoincrement())
  proorismos            String?
  timi                  Int?
  hmerominia_anaxorisis DateTime?
  hmerominia_afiksis    DateTime?
  titlos                String?
  // Αφαίρεση του id_ypefthynou απ' εδώ
  
  drastiriotita         drastiriotita[]
  simmetoxi             simmetoxi[]
  // Αλλαγή της σχέσης για πολλαπλούς υπευθύνους
  ypefthinoi           ypefthynoi_eksormisis[]

  @@map("Eksormisi")
}

model ypefthynoi_eksormisis {
  id_eksormisis        Int
  id_ypefthynou        Int
  
  eksormisi            eksormisi        @relation(fields: [id_eksormisis], references: [id_eksormisis], onDelete: Cascade)
  ypefthynos           esoteriko_melos  @relation(fields: [id_ypefthynou], references: [id_es_melous], onDelete: Cascade)

  @@id([id_eksormisis, id_ypefthynou])
  @@map("YpefthynoiEksormisis")
}

model katafigio {
  id_katafigiou  Int     @id @default(autoincrement())
  onoma          String?
  xoritikotita   Int?
  timi_melous    Int?
  timi_mi_melous Int?
timi_eksoxwrou_melos Int?
timi_eksoxwroy_mimelos Int?
  kratisi_katafigiou kratisi_katafigiou[]

  @@map("Katafigio")
}

model eksoplismos {
  id_eksoplismou        Int       @id @default(autoincrement())
  onoma                 String?
  xroma                 String?
  hmerominia_kataskeuis DateTime?
  megethos              String?
  marka                 String?

  daneizetai daneizetai[]

  @@map("Eksoplismos")
}

model athlima {
  id_athlimatos Int     @id @default(autoincrement())
  onoma         String?

  asxoleitai asxoleitai[]
  agones     agones[]

  @@map("Athlima")
}

model eidos_sindromis {
  id_eidous_sindromis Int     @id @default(autoincrement())
  titlos              String?
  timi                Int?

  sindromi sindromi[]

  @@map("EidosSindromis")
}

model Sxoli {
  id_sxolis        Int              @id @default(autoincrement())
  timi             Int?
  epipedo          String?
  klados           String?
  etos             Int?
  seira            Int?
  topothesies      Json?
  parakolouthiseis parakolouthisi[]
  ekpaideuei       ekpaideuei[]

  @@map("Sxoli")
}

model drastiriotita {
  id_drastiriotitas    Int       @id @default(autoincrement())
  id_eksormisis        Int?
  id_vathmou_diskolias Int?
  ores_poreias         Int?
  titlos               String?
  diafora_ipsous       Int?
  hmerominia           DateTime?
  megisto_ipsometro    Int?
  eksormisi            eksormisi?         @relation(fields: [id_eksormisis], references: [id_eksormisis], onDelete: Cascade)
  vathmos_diskolias    vathmos_diskolias? @relation(fields: [id_vathmou_diskolias], references: [id_vathmou_diskolias], onDelete: Cascade)
  
  // Νέα σχέση many-to-many με συμμετοχές μέσω του junction table
  simmetoxi_drastiriotites simmetoxi_drastiriotita[]

  @@map("Drastiriotita")
}

model sindromi {
  id_sindromis        Int       @id @default(autoincrement())
  hmerominia_enarksis DateTime?
  id_eidous_sindromis Int?

  eidos_sindromis eidos_sindromis? @relation(fields: [id_eidous_sindromis], references: [id_eidous_sindromis], onDelete: Cascade)
  exei            exei[]

  @@map("Sindromi")
}

model kratisi_katafigiou {
  id_kratisis           Int       @id @default(autoincrement())
  id_epafis             Int?
  id_katafigiou         Int?
  hmerominia_afiksis    DateTime?
  hmerominia_epistrofis DateTime?
  ypoloipo              Int?
  arithmos_melwn        Int?
  arithmos_mi_melwn     Int?
  atoma                 Int?
  imeres                Int?
  sinoliki_timh         Int?
  eksoterikos_xoros     String?
  hmerominia_akirosis   DateTime?
  poso_epistrofis       Int?
  hmerominia_kratisis   DateTime?

  epafes    epafes?    @relation(fields: [id_epafis], references: [id_epafis], onDelete: Cascade)
  katafigio katafigio? @relation(fields: [id_katafigiou], references: [id_katafigiou], onDelete: Cascade)
  eksoflei  eksoflei[]

  @@map("Kratisi_Katafigiou")
}

model daneizetai {
  id                    Int       @id @default(autoincrement())
  id_epafis             Int
  id_eksoplismou        Int
  hmerominia_daneismou  DateTime?
  hmerominia_epistrofis DateTime?
  katastasi_daneismou   String?   // Νέο πεδίο για την κατάσταση δανεισμού

  epafes      epafes      @relation(fields: [id_epafis], references: [id_epafis], onDelete: Cascade)
  eksoplismos eksoplismos @relation(fields: [id_eksoplismou], references: [id_eksoplismou], onDelete: Cascade)

  @@map("Daneizetai")
}

model eksoflei {
  id                    Int       @id @default(autoincrement())
  id_epafis             Int
  id_kratisis           Int
  poso                  Int?
  hmerominia_eksoflisis DateTime?

  epafes             epafes             @relation(fields: [id_epafis], references: [id_epafis], onDelete: Cascade)
  kratisi_katafigiou kratisi_katafigiou @relation(fields: [id_kratisis], references: [id_kratisis], onDelete: Cascade)

  @@map("Eksoflei")
}

model ekpaideuei {
  id_ekpaideuti Int
  id_sxolis     Int

  ekpaideutis ekpaideutis @relation(fields: [id_ekpaideuti], references: [id_ekpaideuti], onDelete: Cascade)
  sxoli       Sxoli       @relation(fields: [id_sxolis], references: [id_sxolis], onDelete: Cascade)

  @@id([id_ekpaideuti, id_sxolis])
  @@map("Ekpaideuei")
}

model simmetoxi {
  id_simmetoxis        Int              @id @default(autoincrement())
  id_melous            Int
  id_eksormisis        Int?             // Προσθήκη για άμεση σύνδεση με εξόρμηση
  poso_epistrofis      Int?
  timi                 Int?
  katastasi            String?
  ypoloipo             Int?
  hmerominia_dilosis   DateTime?
  hmerominia_akirosis  DateTime?
  melos                melos            @relation(fields: [id_melous], references: [id_melous], onDelete: Cascade)
  eksormisi            eksormisi?       @relation(fields: [id_eksormisis], references: [id_eksormisis], onDelete: Cascade)
  plironei             plironei[]       // Αντίστροφη σχέση με το plironei
  
  // Νέα σχέση many-to-many με δραστηριότητες μέσω του junction table
  simmetoxi_drastiriotites simmetoxi_drastiriotita[]

  @@map("Simmetoxi")
}


// Νέος πίνακας για τη σχέση many-to-many
model simmetoxi_drastiriotita {
  id_simmetoxis        Int
  id_drastiriotitas    Int
  
  simmetoxi            simmetoxi        @relation(fields: [id_simmetoxis], references: [id_simmetoxis], onDelete: Cascade)
  drastiriotita        drastiriotita    @relation(fields: [id_drastiriotitas], references: [id_drastiriotitas], onDelete: Cascade)

  @@id([id_simmetoxis, id_drastiriotitas])
  @@map("Simmetoxi_Drastiriotita")
}

model plironei {
  id                   Int              @id @default(autoincrement())
  id_melous            Int
  id_simmetoxis        Int
  hmerominia_pliromis  DateTime?
  poso_pliromis        Int?
  melos                melos            @relation(fields: [id_melous], references: [id_melous], onDelete: Cascade)
  simmetoxi            simmetoxi        @relation(fields: [id_simmetoxis], references: [id_simmetoxis], onDelete: Cascade)

  @@map("Plironei")
}

model exei {
  id_sindromiti       Int
  id_sindromis        Int
  hmerominia_pliromis DateTime?
  sindromi            sindromi    @relation(fields: [id_sindromis], references: [id_sindromis], onDelete: Cascade)
  sindromitis         sindromitis @relation(fields: [id_sindromiti], references: [id_sindromiti], onDelete: Cascade)

  @@id([id_sindromiti, id_sindromis])
  @@map("Exei")
}

model asxoleitai {
  id_athliti    Int
  id_athlimatos Int
  athlima       athlima  @relation(fields: [id_athlimatos], references: [id_athlimatos], onDelete: Cascade)
  athlitis      athlitis @relation(fields: [id_athliti], references: [id_athliti], onDelete: Cascade)

  @@id([id_athliti, id_athlimatos])
  @@map("Asxoleitai")
}

model agones {
  id_agona      Int       @id @default(autoincrement())
  id_athlimatos Int?
  perigrafi     String?
  hmerominia    DateTime?
  onoma         String?

  athlima    athlima?     @relation(fields: [id_athlimatos], references: [id_athlimatos], onDelete: Cascade)
  agonizetai agonizetai[]

  @@map("Agones")
}

model agonizetai {
  id_athliti Int
  id_agona   Int
  agones     agones   @relation(fields: [id_agona], references: [id_agona], onDelete: Cascade)
  athlitis   athlitis @relation(fields: [id_athliti], references: [id_athliti], onDelete: Cascade)

  @@id([id_athliti, id_agona])
  @@map("Agonizetai")
}

model parakolouthisi {
  id_parakolouthisis Int              @id @default(autoincrement())
  id_melous          Int
  id_sxolis          Int?
  poso_epistrofis    Int?
  timi               Int?
  ypoloipo           Int?
  katastasi          String?
  hmerominia_dilosis DateTime?
  hmerominia_akrirosis DateTime?
  melos              melos            @relation(fields: [id_melous], references: [id_melous], onDelete: Cascade)
  sxoli              Sxoli?           @relation(fields: [id_sxolis], references: [id_sxolis], onDelete: Cascade)
  katavalei          katavalei[]      // Αντίστροφη σχέση με το katavalei

  @@map("Parakolouthisi")
}

model katavalei {
  id                   Int              @id @default(autoincrement())
  id_melous            Int
  id_parakolouthisis   Int
  poso                 Int?
  hmerominia_katavolhs DateTime?
  melos                melos            @relation(fields: [id_melous], references: [id_melous], onDelete: Cascade)
  parakolouthisi       parakolouthisi   @relation(fields: [id_parakolouthisis], references: [id_parakolouthisis], onDelete: Cascade)

  @@map("Katavalei")
}